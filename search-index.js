var searchIndex = JSON.parse('{\
"bcs":{"doc":"Binary Canonical Serialization (BCS)","t":[0,5,17,17,5,5,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["test_helpers","assert_canonical_encode_decode","MAX_SEQUENCE_LENGTH","MAX_CONTAINER_DEPTH","from_bytes","from_bytes_seed","Error","Eof","Io","ExceededMaxLen","ExceededContainerDepthLimit","ExpectedBoolean","ExpectedMapKey","ExpectedMapValue","NonCanonicalMap","ExpectedOption","Custom","MissingLen","NotSupported","RemainingInput","Utf8","NonCanonicalUleb128Encoding","IntegerOverflowDuringUleb128Decoding","Result","is_human_readable","serialize_into","serialized_size","to_bytes","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","clone","eq","ne","fmt","fmt","custom","custom"],"q":["bcs","bcs::test_helpers","bcs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Variable length sequences in BCS are limited to max …","Maximal allowed depth of BCS data, counting only structs …","Deserializes a <code>&[u8]</code> into a type.","Perform a stateful deserialization from a <code>&[u8]</code> using the …","","","","","","","","","","","","","","","","","","","","Same as <code>to_bytes</code> but write directly into an <code>std::io::Write</code>…","Same as <code>to_bytes</code> but only return the size of the …","Serialize the given data structure as a <code>Vec<u8></code> of BCS.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],null,null,[[],["result",6]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["result",6]],[[],[["usize",15],["result",6]]],[[],[["vec",3],["result",6]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["error",3]]],[[],["error",4]],[[["error",4]],["bool",15]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["display",8]]],[[["display",8]]]],"p":[[4,"Error"]]}\
}');
initSearch(searchIndex);